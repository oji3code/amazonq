kubectl delete -f - << 'EOF'
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: karpenter
  namespace: karpenter
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karpenter
  namespace: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karpenter-admin
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karpenter-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: karpenter-core
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: karpenter
  namespace: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: karpenter-dns
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: karpenter
  namespace: karpenter
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: karpenter-dns
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: karpenter
  namespace: karpenter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter
  namespace: karpenter
EOF

echo "Karpenter Namespace (karpenter) Resources:"
kubectl get pdb,sa,svc,deploy,role,rolebinding -n karpenter

echo -e "\nCluster-wide Resources:"
kubectl get clusterrole karpenter-admin karpenter-core karpenter
kubectl get clusterrolebinding karpenter-core karpenter

echo -e "\nkube-system Namespace Resources:"
kubectl get role karpenter-dns -n kube-system
kubectl get rolebinding karpenter-dns -n kube-system